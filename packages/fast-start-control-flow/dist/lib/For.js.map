{"version":3,"file":"For.js","sources":["../../src/If.vue","../../src/For.vue"],"sourcesContent":["<script setup lang=\"ts\" generic=\"T\">\ndefineOptions({\n    name: \"If\"\n})\ndefineProps<{\n    when: T | undefined | null | false\n}>()\n\nconst valueType = (item: any) => {\n    return item as NonNullable<T>\n}\n</script>\n\n<template>\n    <slot v-if=\"when\" :value=\"valueType(when)\" />\n    <slot v-else name=\"fallback\" />\n</template>\n","<script setup lang=\"ts\" generic=\"T extends any[]\">\nimport { computed } from \"vue\"\nimport If from \"./If.vue\"\n\ndefineOptions({\n    name: \"For\"\n})\n\nconst props = defineProps<{\n    echo: T\n    rowKey: keyof T[number]\n}>()\n\nfunction itemType(item: T[number]) {\n    return item as T[number]\n}\n\nconst echoType = computed<any[]>(() => {\n    return props.echo\n})\n</script>\n\n<template>\n    <template v-for=\"item in echo\" :key=\"rowKey\">\n        <slot v-bind=\"itemType(item)\" />\n    </template>\n    <If :when=\"!echoType || !echoType.length || echoType.length === 0\">\n        <slot name=\"fallback\" />\n    </If>\n</template>\n"],"names":["valueType","item","props","__props","itemType","echoType","computed"],"mappings":"0NAQM,MAAAA,EAAaC,GACRA,4MCDX,MAAMC,EAAQC,EAKd,SAASC,EAASH,EAAiB,CACxB,OAAAA,CACX,CAEM,MAAAI,EAAWC,EAAAA,SAAgB,IACtBJ,EAAM,IAChB"}